@inherits Shared.DoodleBaseComponent

<div data-toolbarmenu-colorpickercomponent="@DataAttributeName" class="toolbar-panels @Theme.ToolbarContentPanelsClass">   
    <div class="toolbar-panel @Theme.ToolbarContentPanelClass">
        <div class="toolbar-panel-header @Theme.ToolbarContentPanelHeaderClass">
            <span class="toolbar-panel-header-text @Theme.ToolbarContentPanelHeaderTextClass">Quick Colors</span>
        </div>

        <div class="toolbar-panel-content @Theme.ToolbarContentPanelContentClass">
            <div data-toolbarmenu-colorpickercomponent-menufavourite="@DataAttributeName" class="toolbar-panel-content-wrapper @Theme.ToolbarContentPanelContentWrapperClass doodle-color-picker-favourites @FavouriteWrapperClass">
                @if (FavouriteColors?.Count() > 0)
                {
                    foreach (var color in FavouriteColors)
                    {
                        <div class="doodle-color-picker-color-outer @((SelectedColor == color) ? "active" : "") @FavouriteOuterClass" 
                                @onclick="@(() => SelectedColor = color)">
                            <div class="doodle-color-picker-color-inner @FavouriteInnerClass" style="background-color: @color;"></div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
    @if (ShowCustomColor)
    {
        <div class="toolbar-panel @Theme.ToolbarContentPanelClass">
            <div class="toolbar-panel-header @Theme.ToolbarContentPanelHeaderClass">
                <span class="toolbar-panel-header-text @Theme.ToolbarContentPanelHeaderTextClass">Custom Color</span>
            </div>

            <div class="toolbar-panel-content @Theme.ToolbarContentPanelContentClass">
                <div data-toolbarmenu-colorpickercomponent-menucustomcolor="@DataAttributeName" class="toolbar-panel-content-wrapper @Theme.ToolbarContentPanelContentWrapperClass doodle-color-picker-custom @CustomWrapperClass">
                    <button class="toolbar-button @Theme.ToolbarMenuButtonClass btn-colorpickercomponent-pickcolor" title="Pick Color"
                            @onclick="@(() => OpenColorPicker())"> 
                        <span class="material-icons" style="color: @SelectedColor">format_color_fill</span>
                    </button>
                    <input @ref="ColorPicker" class="@ColorInputClass"  type="color" @bind-value="@SelectedColor" />
                </div>
            </div>
        </div>
    }
    <div class="toolbar-panel @Theme.ToolbarContentPanelClass">
        <div class="toolbar-panel-header @Theme.ToolbarContentPanelHeaderClass">
            <span class="toolbar-panel-header-text @Theme.ToolbarContentPanelHeaderTextClass">Close</span>
        </div>

        <div class="toolbar-panel-content @Theme.ToolbarContentPanelContentClass">
            <div data-toolbarmenu-colorpickercomponent-menuclose="@DataAttributeName" class="toolbar-panel-content-wrapper @Theme.ToolbarContentPanelContentWrapperClass">
                <button class="toolbar-button @Theme.ToolbarMenuButtonClass btn-colorpickercomponent-close" title="Close"
                        @onclick="@(() => OnCloseMenu.InvokeAsync())"> 
                    <span class="material-icons toolbar-close @Theme.ToolbarContentPanelContentCloseClass">close</span>
                </button>
            </div>
        </div>
    </div>
</div>