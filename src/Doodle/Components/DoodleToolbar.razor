@if (Visible)
{
    <div data-doodle-toolbar="@DataAttributeName" class="doodle-toolbar-wrapper @WrapperClass">
        <div class="doodle-toolbar-buttons @(Orientation == Abstractions.Common.Orientation.Vertical ? "vertical" : "")">

            <button hidden="@(!UndoButtonVisible)" 
                    disabled=@(!UndoButtonEnabled) 
                    class="doodle-toolbar-button @UndoButtonClass" 
                    @onclick="@(() => UndoButtonClick.InvokeAsync())"> 
                    @if (UndoButtonContent == null)
                    {
                         <div title="Undo" class="img-wrapper toolbar-button-undo"></div>
                    }
                    else
                    { 
                        @UndoButtonContent
                    }
            </button>

            <button hidden="@(!RedoButtonVisible)" 
                    disabled=@(!RedoButtonEnabled) 
                    class="doodle-toolbar-button @RedoButtonClass" 
                    @onclick="@(() => RedoButtonClick.InvokeAsync())">
                    @if (RedoButtonContent == null)
                    {
                         <div title="Redo" class="img-wrapper toolbar-button-redo"></div>
                    }
                    else
                    { 
                        @RedoButtonContent
                    }
            </button>
            
            <button hidden="@(!ClearButtonVisible)" 
                    disabled=@(!ClearButtonEnabled) 
                    class="doodle-toolbar-button @ClearButtonClass" 
                    @onclick="@(() => ClearButtonClick.InvokeAsync(ClearHistoryOnClear))">
                    @if (ClearButtonContent == null)
                    {
                         <div title="Clear Image" class="img-wrapper toolbar-button-clear"></div>
                    }
                    else
                    { 
                        @ClearButtonContent
                    }
            </button>

            <button hidden="@(!SaveButtonVisible)" 
                    disabled=@(!SaveButtonEnabled) 
                    class="doodle-toolbar-button @SaveButtonClass" 
                    @onclick="@(() => SaveButtonClick.InvokeAsync())">
                    @if (SaveButtonContent == null)
                    {
                         <div title="Save Canvas Data" class="img-wrapper toolbar-button-save"></div>
                    }
                    else
                    { 
                        @SaveButtonContent
                    }
            </button>

            <button hidden="@(!ExportButtonVisible)" 
                    disabled=@(!ExportButtonEnabled) 
                    class="doodle-toolbar-button @ExportButtonClass" 
                    @onclick="@(() => ExportButtonClick.InvokeAsync())">
                    @if (ExportButtonContent == null)
                    {
                         <div title="Export to an image" class="img-wrapper toolbar-button-export"></div>
                    }
                    else
                    { 
                        @ExportButtonContent
                    }
            </button>
        </div>
    </div>
}

