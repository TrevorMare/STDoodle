@inherits Shared.DoodleBaseComponent
 
<div data-toolbarmenu-sizepickercomponent="@DataAttributeName" class="toolbar-panels @Theme.ToolbarContentPanelsClass"> 
    <div class="toolbar-panel @Theme.ToolbarContentPanelClass">
        <div class="toolbar-panel-header @Theme.ToolbarContentPanelHeaderClass">
            <span class="toolbar-panel-header-text @Theme.ToolbarContentPanelHeaderTextClass">Quick Sizes</span>
        </div>
        <div class="toolbar-panel-content @Theme.ToolbarContentPanelContentClass content-quick-sizes">
            <div data-toolbarmenu-sizepickercomponent-menufavourites="@DataAttributeName" class="toolbar-panel-content-wrapper @Theme.ToolbarContentPanelContentWrapperClass doodle-size-picker-favourites">
                @if (FavouriteSizes?.Count() > 0)
                {
                    foreach (var size in FavouriteSizes) 
                    {
                        <div class="doodle-size-picker-outer @((SelectedSize == size) ? "active" : "") @FavouriteOuterClass" @onclick="@(() => SelectedSize = size)">
                            <div class="doodle-size-picker-inner @FavouriteInnerClass">
                                <div style="border-top-width: @(size)px;" class="doodle-size-picker-line"></div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    @if (ShowCustomNumber)
    {
        <div class="toolbar-panel @Theme.ToolbarContentPanelClass">
            <div class="toolbar-panel-header @Theme.ToolbarContentPanelHeaderClass">
                <span class="toolbar-panel-header-text @Theme.ToolbarContentPanelHeaderTextClass">Drawing Size</span>
            </div>
            <div class="toolbar-panel-content @Theme.ToolbarContentPanelContentClass content-custom-sizes"> 
                <div data-toolbarmenu-sizepickercomponent-menudrawsize="@DataAttributeName" class="toolbar-panel-content-wrapper @Theme.ToolbarContentPanelContentWrapperClass">
                    <button class="toolbar-button @Theme.ToolbarMenuButtonClass btn-sizepickercomponent-decreasestroke" title="Decrease"
                        @onclick="@(() => DoodleDrawInteraction.SetStrokeWidth(DoodleDrawInteraction.StrokeWidth - 1))"> 
                        <span class="material-icons">remove_circle_outline</span>
                    </button>

                    <label>@DoodleDrawInteraction.StrokeWidth </label>

                    <button class="toolbar-button @Theme.ToolbarMenuButtonClass btn-sizepickercomponent-increasestroke" title="Increase"
                            @onclick="@(() => DoodleDrawInteraction.SetStrokeWidth(DoodleDrawInteraction.StrokeWidth + 1))"> 
                            <span class="material-icons">add_circle_outline</span>
                    </button>
                </div>
            </div>
        </div>
    }

    <div class="toolbar-panel @Theme.ToolbarContentPanelClass">
        <div class="toolbar-panel-header @Theme.ToolbarContentPanelHeaderClass">
            <span class="toolbar-panel-header-text @Theme.ToolbarContentPanelHeaderTextClass">Eraser Size</span>
        </div>
        <div class="toolbar-panel-content @Theme.ToolbarContentPanelContentClass content-custom-sizes"> 
            <div data-toolbarmenu-sizepickercomponent-menuerasersize="@DataAttributeName" class="toolbar-panel-content-wrapper @Theme.ToolbarContentPanelContentWrapperClass">
                <button class="toolbar-button @Theme.ToolbarMenuButtonClass btn-sizepickercomponent-decreaseerasor" title="Decrease"
                    @onclick="@(() => DoodleDrawInteraction.SetEraserWidth(DoodleDrawInteraction.EraserWidth - 1))"> 
                    <span class="material-icons">remove_circle_outline</span>
                </button>

                <label>@DoodleDrawInteraction.EraserWidth </label>

                <button class="toolbar-button @Theme.ToolbarMenuButtonClass btn-sizepickercomponent-increaseerasor" title="Increase"
                        @onclick="@(() => DoodleDrawInteraction.SetEraserWidth(DoodleDrawInteraction.EraserWidth + 1))"> 
                        <span class="material-icons">add_circle_outline</span>
                </button>
            </div>
        </div>
    </div>

    <div class="toolbar-panel @Theme.ToolbarContentPanelClass">
        <div class="toolbar-panel-header @Theme.ToolbarContentPanelHeaderClass">
            <span class="toolbar-panel-header-text @Theme.ToolbarContentPanelHeaderTextClass">Close</span>
        </div>

        <div class="toolbar-panel-content @Theme.ToolbarContentPanelContentClass">
            <div data-toolbarmenu-sizepickercomponent-menuclose="@DataAttributeName" class="toolbar-panel-content-wrapper @Theme.ToolbarContentPanelContentWrapperClass">
                <button class="toolbar-button @Theme.ToolbarMenuButtonClass btn-sizepickercomponent-close" title="Close"
                        @onclick="@(() => OnCloseMenu.InvokeAsync())"> 
                    <span class="material-icons toolbar-close @Theme.ToolbarContentPanelContentCloseClass">close</span>
                </button>
            </div>
        </div>
    </div>
</div>