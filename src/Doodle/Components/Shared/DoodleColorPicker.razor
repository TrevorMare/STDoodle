@inherits Shared.DoodleBaseComponent

@if (Visible)
{
    <div data-doodle-color-picker="@DataAttributeName" class="doodle-color-picker-wrapper @(Orientation == Abstractions.Common.Orientation.Vertical ? "vertical" : "") @WrapperClass">
        <div class="doodle-color-picker-favourites @FavouriteWrapperClass">
            @if (FavouriteColors?.Count() > 0)
            {
                foreach (var color in FavouriteColors)
                {
                    <div class="doodle-color-picker-color-outer @(Orientation == Abstractions.Common.Orientation.Vertical ? "vertical" : "")  @((SelectedColor == color) ? "active" : "") @FavouriteOuterClass" @onclick="@(() => SelectedColor = color)">
                        <div class="doodle-color-picker-color-inner @FavouriteInnerClass" style="background-color: @color;"></div>
                    </div>
                }
            }
        </div>
        @if (ShowCustomColor)
        {
            <div class="doodle-color-picker-custom @CustomWrapperClass">
                <input class="@ColorInputClass" type="color" @bind-value="@SelectedColor" />
            </div>
        }
    </div>
}

