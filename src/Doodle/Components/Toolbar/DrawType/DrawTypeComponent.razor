@inherits Shared.DoodleBaseComponent

@if (Show)
{
    <div data-toolbarbuttons-drawtypecomponent="@DataAttributeName" class="toolbar-buttons-container @Theme.ToolbarMenuButtonsContainerClass" @attributes="AdditionalAttributes">
        <div class="toolbar-buttons @Theme.ToolbarMenuButtonsClass">
            @if (ShowEraser)
            {
                <button data-toolbarbuttons-drawtypecomponent-erasorbutton="@DataAttributeName" 
                        class="toolbar-button @Theme.ToolbarMenuButtonClass btn-drawtypecomponent-eraser @(DoodleDrawInteraction.DrawType == DrawType.Eraser ? "selected" : "")" title="Erasor"
                        @onclick="@(() => { DoodleDrawInteraction.SetDrawType(DrawType.Eraser); DoodleDrawInteraction.SetToolbarContent(ToolbarContent.None); })"> 
                        <span class="material-icons">sell</span>
                </button>
            }

            @if (ShowPen)
            {
                <button data-toolbarbuttons-drawtypecomponent-penbutton="@DataAttributeName" 
                        class="toolbar-button @Theme.ToolbarMenuButtonClass btn-drawtypecomponent-pen @(DoodleDrawInteraction.DrawType == DrawType.Pen ? "selected" : "")" title="Draw Pen"
                        @onclick="@(() => { DoodleDrawInteraction.SetDrawType(DrawType.Pen); DoodleDrawInteraction.SetToolbarContent(ToolbarContent.None); })"> 
                        <span class="material-icons">draw</span>
                </button>
            }
            
            @if (ShowLine)
            {
                <button data-toolbarbuttons-drawtypecomponent-linebutton="@DataAttributeName" 
                        class="toolbar-button @Theme.ToolbarMenuButtonClass btn-drawtypecomponent-line @(DoodleDrawInteraction.DrawType == DrawType.Line ? "selected" : "")" title="Draw Line"
                        @onclick="@(() => { DoodleDrawInteraction.SetDrawType(DrawType.Line); DoodleDrawInteraction.SetToolbarContent(ToolbarContent.None); })"> 
                        <span class="material-icons">timeline</span>
                </button>
            }

            @if (ShowResizableText)
            {
                <button data-toolbarbuttons-drawtypecomponent-textbutton="@DataAttributeName" 
                        class="toolbar-button @Theme.ToolbarMenuButtonClass btn-drawtypecomponent-text @(DoodleDrawInteraction.DrawType == DrawType.ResizableText ? "selected" : "")" title="Draw Text"
                        @onclick="@(() => { DoodleDrawInteraction.SetDrawType(DrawType.ResizableText); DoodleDrawInteraction.ToggleToolbarContent(ToolbarContent.ResizableText); })"> 
                        <span class="material-icons">text_fields</span>
                </button>
            }
            @if (ShowResizableImage)
            {
                <button data-toolbarbuttons-drawtypecomponent-imagebutton="@DataAttributeName" 
                        class="toolbar-button @Theme.ToolbarMenuButtonClass btn-drawtypecomponent-image @(DoodleDrawInteraction.DrawType == DrawType.ResizableImage ? "selected" : "")" title="Draw Image"
                        @onclick="@(() => { DoodleDrawInteraction.SetDrawType(DrawType.ResizableImage); DoodleDrawInteraction.ToggleToolbarContent(ToolbarContent.ResizableImage); })"> 
                        <span class="material-icons">format_shapes</span>
                </button>
            }
        </div>
    </div>
}

